##
# Oasis Node Configuration
#
# This file's contents are derived from the command line arguments found in the
# root command of the oasis-node binary. For more information, execute:
#
#     oasis-node --help
#
# Settings on the command line that are separated by a dot all belong to the
# same nested object. For example, "--foo.bar.baz hello" would translate to:
#
#     foo:
#       bar:
#         baz: hello
##

# Set this to where you wish to store node data. The node's artifacts
# should also be located in this directory.
datadir: /home/oasis/node

# Logging.
#
# Per-module log levels are defined below. If you prefer just one unified log
# level, you can use:
#
# log:
#   level: debug
log:
  level:
    # Per-module log levels. Longest prefix match will be taken. Fallback to
    # "default", if no match.
    default: debug
    tendermint: warn
    tendermint/context: error
  format: JSON
  # By default logs are output to stdout. If you would like to output logs to
  # a file, you can use:
  #
  # file: /var/log/oasis-node.log

# Genesis.
genesis:
  # Path to the genesis file for the current version of the network.
  file: /home/oasis/etc/genesis.json

# Worker configuration.
worker:
  registration:
    # In order for the node to register itself, the entity.json of the entity
    # used to provision the node must be available on the node.
    entity: /home/oasis/node/entity/entity.json

# Consensus backend.
consensus:
  # Setting this to true will mean that the node you're deploying will attempt
  # to register as a validator.
  validator: true

# Tendermint backend configuration.
tendermint:
  abci:
    prune:
      # WARNING: Use this carefully. Pruning blockchain state is resource intensive.
      # However, running with pruning disabled means you will eventually fill all
      # storage on your node.
      # See https://github.com/oasislabs/oasis-core/issues/2432 for more details.
      #
      # This configuration would cause your node to retain state from only the
      # latest 86400 blocks:
      # strategy: keep_n
      # num_kept: 86400
      #
      strategy: none
  core:
    listen_address: tcp://0.0.0.0:26656

    # The external IP that is used when registering this node to the network.
    # NOTE: If you are using the Sentry node setup, this option should be
    # omitted.
    external_address: tcp://{{ external_address }}:26656

  db:
    backend: badger
  debug:
    addr_book_lenient: false
  # List of seed nodes to connect to.
  # NOTE: You can add additional seed nodes to this list if you want.
  p2p:
    seed:
      - "D14B9192C94F437E9FA92A755D3CC0341F2E87CF@34.82.86.53:26656"
